(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{558:function(t,a,e){"use strict";e.r(a);var s=e(12),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),e("h4",{attrs:{id:"区分大小写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区分大小写"}},[t._v("#")]),t._v(" 区分大小写")]),t._v(" "),e("ol",[e("li",[t._v("js种一切都区分大小写，无论是变量、函数名还是操作符。")])]),t._v(" "),e("h4",{attrs:{id:"标识符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),e("ol",[e("li",[t._v("所谓标识符，就是变量、函数、属性或函数参数的名称。")])]),t._v(" "),e("ul",[e("li",[t._v("第一个字符必须是一个字母、下划线（_）或美元符号（$）；")]),t._v(" "),e("li",[t._v("剩下的其他字符可以是字母、下划线、美元符号或数字。")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("关键字、保留字、true、false 和 null 不能作为标识符")])]),t._v(" "),e("h4",{attrs:{id:"严格模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" 严格模式")]),t._v(" "),e("ol",[e("li",[t._v("ECMAScript 5 增加了严格模式（strict mode）的概念.")]),t._v(" "),e("li",[t._v("严格模式是一种不同的 JavaScript 解析和执行模型，ECMAScript 3 的一些不规范写法在这种模式下会被处理，对于不安全的活动将抛出错误。")]),t._v(" "),e("li",[t._v('启用严格模式，在脚本开头加上这一行："use strict";也可以单独指定一个函数在严格模式下执行，只要把这个预处理指令放到函数体开头即可：')])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function doSomething() {\n "use strict";\n // 函数体\n} \n\n')])])]),e("h4",{attrs:{id:"语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),e("ol",[e("li",[t._v("语句以分号为结尾。不加分号也能执行，但是不推荐。部分代码不加分号会出问题")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[1].map(i => i)  // 不报错\n\n\nlet a = 3\n[1].map(i => i)  // Cannot read properties of undefined (reading 'map')\n\nlet a = 3\n;[1].map(i => i)  // 不报错\n\n")])])]),e("p",[t._v("由上面代码可以看出，不加分号，有时候是会有问题的。这个开头是'['，把他和上面一句当作一个整体执行了，所以报错了。\n可以看看尤大的说法："),e("a",{attrs:{href:"https://www.zhihu.com/question/20298345/answer/49551142",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 语句后应该加分号么？"),e("OutboundLink")],1),t._v("\n会导致上下行解析出问题的 token 有 5 个：括号，方括号，正则开头的斜杠，加号，减号。\n但是这种情况一般很少。所以加不加看自己习惯了，加了更符合规范。")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("if之类的条件语句，如果只执行一条语句，可以省略括号。执行多条语句必须有括号即代码块")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 有效，但容易导致错误，应该避免\nif (test)\n console.log(test);\n// 推荐\nif (test) {\n console.log(test);\n} \n\n")])])]),e("h4",{attrs:{id:"关键字与保留字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关键字与保留字"}},[t._v("#")]),t._v(" 关键字与保留字")]),t._v(" "),e("ol",[e("li",[t._v("关键字不能用作标识符或属性名。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("break do in typeof\ncase else instanceof var\ncatch export new void\nclass extends return while\nconst finally super with\ncontinue for switch yield\ndebugger function this\ndefault if throw\ndelete import try\n\n\n\n始终保留:\nenum\n严格模式下保留:\nimplements package public\ninterface protected static\nlet private\n模块代码中保留:\nawait \n")])])]),e("h4",{attrs:{id:"var关键字"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#var关键字"}},[t._v("#")]),t._v(" var关键字")]),t._v(" "),e("ol",[e("li",[t._v("var 声明作用域。使用 var 操作符定义的变量会成为包含它的函数的局部变量。使用 var在一个函数内部定义一个变量，就意味着该变量将在函数退出时被销毁。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('function test() {\n var message = "hi"; // 局部变量\n}\ntest();\nconsole.log(message); // 出错！\n\n')])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("var变量提升")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function foo() {\n console.log(age);\n var age = 26;\n}\nfoo(); // undefined \n")])])]),e("h4",{attrs:{id:"let-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#let-const"}},[t._v("#")]),t._v(" let\\const")]),t._v(" "),e("ol",[e("li",[t._v("'../es6+/1. 【es6+】 let、const.md'")])]),t._v(" "),e("h4",{attrs:{id:"声明风格最佳实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#声明风格最佳实践"}},[t._v("#")]),t._v(" 声明风格最佳实践")]),t._v(" "),e("ol",[e("li",[t._v("不适用var，const优先，let次之")])]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("ol",[e("li",[t._v("简单数据类型：ECMAScript 有 6 种简单数据类型（也称为原始类型）：Undefined、Null、Boolean、Number、String 和 Symbol。Symbol（符号）是 ECMAScript 6 新增的。")]),t._v(" "),e("li",[t._v("还有一种复杂数据类型叫 Object（对象）。Object 是一种无序名值对的集合。")])]),t._v(" "),e("h4",{attrs:{id:"typeof-操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof-操作符"}},[t._v("#")]),t._v(" typeof 操作符")]),t._v(" "),e("p",[t._v("对一个值使用 typeof 操作符会返回下列字符串之一：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"undefined"表示值未定义；\n"boolean"表示值为布尔值；\n"string"表示值为字符串；\n"number"表示值为数值；\n"object"表示值为对象（而不是函数）或 null；\n"function"表示值为函数；\n"symbol"表示值为符号。\n')])])]),e("h4",{attrs:{id:"undefined"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" Undefined")]),t._v(" "),e("ol",[e("li",[t._v("Undefined 类型只有一个值，就是特殊值 undefined。当使用 var 或 let 声明了变量但没有初始化时，就相当于给变量赋予了 undefined 值")]),t._v(" "),e("li",[t._v("undefined 有可能会被改写，所以有时候也可以使用void 0来表示undefined，如下：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function a() {\nlet undefined = 1;\nconsole.log(undefined);   //1\nlet b;\nconsole.log(undefined === b)  //false\nconsole.log(b===void 0)  // true\n}\na();\n\n")])])]),e("h4",{attrs:{id:"null"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" Null")]),t._v(" "),e("ol",[e("li",[t._v("typeof null === 'object'  //true")]),t._v(" "),e("li",[t._v("null === null //true")])]),t._v(" "),e("h4",{attrs:{id:"boolean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),e("ol",[e("li",[t._v("有两个字面值：true 和 false")]),t._v(" "),e("li",[t._v("所有其他 ECMAScript 类型的值都有相应布尔值的等价形式。要将一个其他类型的值转换为布尔值，可以调用特定的 Boolean()转型函数")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('let message = "Hello world!";\nlet messageAsBoolean = Boolean(message); \n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('数据类型  转换为 true 的值  转换为 false 的值\nBoolean  true  false\nString  非空字符串  ""（空字符串）\nNumber  非零数值（包括无穷值）  0、NaN（参见后面的相关内容）\nObject  任意对象  null\nUndefined  N/A（不存在）  undefined\n')])])]),e("h4",{attrs:{id:"number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),e("ol",[e("li",[t._v("最基本的数值字面量格式是十进制整数")]),t._v(" "),e("li",[t._v("整数也可以用八进制（以 8 为基数）或十六进制（以 16 为基数）字面量表示。对于八进制字面量，第一个数字必须是零（0），然后是相应的八进制数字（数值 0~7）。如果字面量中包含的数字超出了应有的范围，就会忽略前缀的零，后面的数字序列会被当成十进制数。（八进制字面量在严格模式下是无效的，会导致 JavaScript 引擎抛出语法错误。）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("let octalNum1 = 070; // 八进制的 56\nlet octalNum2 = 079; // 无效的八进制值，当成 79 处理\nlet octalNum3 = 08; // 无效的八进制值，当成 8 处理\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("要创建十六进制字面量，必须让真正的数值前缀 0x（区分大小写），然后是十六进制数字（0~9 以及 A~F）。十六进制数字中的字母大小写均可。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("let hexNum1 = 0xA; // 十六进制 10\nlet hexNum2 = 0x1f; // 十六进制 31\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("使用八进制和十六进制格式创建的数值在所有数学操作中都被视为十进制数值。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" 0xA +  0xA;  // 20\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);